{"version":3,"file":"static/js/536.665806ba.chunk.js","mappings":"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","sources":["components/ImageViewer.js","components/Footer.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './ImageViewer.css'; // You can style it as needed\r\n\r\nconst ImageViewer = ({ imageSrc, onClose }) => {\r\n  const [scale, setScale] = useState(1);\r\n  const [translateX, setTranslateX] = useState(0); // For horizontal panning\r\n  const [translateY, setTranslateY] = useState(0); // For vertical panning\r\n  const imageRef = useRef(null);\r\n\r\n  const handleTouchStart = (e) => {\r\n    if (e.touches.length === 2) {\r\n      e.preventDefault(); // Prevent default touch behavior\r\n      setScale((prevScale) => Math.max(prevScale, 1)); // Prevent scaling below 1\r\n    }\r\n  };\r\n\r\n  const handleTouchMove = (e) => {\r\n    if (e.touches.length === 2) {\r\n      e.preventDefault(); // Prevent default touch behavior\r\n      const distance = Math.sqrt(\r\n        Math.pow(e.touches[0].clientX - e.touches[1].clientX, 2) +\r\n        Math.pow(e.touches[0].clientY - e.touches[1].clientY, 2)\r\n      );\r\n\r\n      const initialDistance = 300; // Set an initial distance for scaling\r\n      const newScale = Math.max(1, (distance / initialDistance));\r\n      setScale(newScale);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleTouchEnd = () => {\r\n      setScale((prevScale) => Math.max(prevScale, 1)); // Prevent scaling below 1\r\n    };\r\n\r\n    window.addEventListener('touchend', handleTouchEnd);\r\n    return () => {\r\n      window.removeEventListener('touchend', handleTouchEnd);\r\n    };\r\n  }, []);\r\n\r\n  const handleZoomIn = () => {\r\n    setScale((prevScale) => prevScale + 0.1);\r\n  };\r\n\r\n  const handleZoomOut = () => {\r\n    setScale((prevScale) => Math.max(1, prevScale - 0.1));\r\n  };\r\n\r\n  const panImage = (direction) => {\r\n    const panAmount = 50; // Adjust the pan amount as needed\r\n    switch (direction) {\r\n      case 'left':\r\n        setTranslateX((prev) => prev + panAmount);\r\n        break;\r\n      case 'right':\r\n        setTranslateX((prev) => prev - panAmount);\r\n        break;\r\n      case 'up':\r\n        setTranslateY((prev) => prev + panAmount);\r\n        break;\r\n      case 'down':\r\n        setTranslateY((prev) => prev - panAmount);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"image-viewer-overlay\" onClick={onClose}>\r\n      <div\r\n        className=\"image-viewer-content\"\r\n        onClick={(e) => e.stopPropagation()}\r\n        onTouchStart={handleTouchStart}\r\n        onTouchMove={handleTouchMove}\r\n        style={{\r\n          position: 'relative', // Make sure the container has relative positioning\r\n        }}\r\n      >\r\n        <img\r\n          src={imageSrc}\r\n          alt=\"Update Story\"\r\n          className=\"image-viewer-image\"\r\n          style={{\r\n            transform: `scale(${scale}) translate(${translateX}px, ${translateY}px)`,\r\n            transition: 'transform 0.3s ease',\r\n          }}\r\n          ref={imageRef}\r\n        />\r\n        <button className=\"image-viewer-close\" onClick={onClose}>Close</button>\r\n        <div className=\"image-viewer-nav\">\r\n          <button className=\"image-viewer-zoom-in\" onClick={handleZoomIn}>+</button>\r\n          <button className=\"image-viewer-zoom-out\" onClick={handleZoomOut}>-</button>\r\n          <div className=\"image-viewer-pan-buttons\">\r\n            <button onClick={() => panImage('up')}>↑</button>\r\n            <button onClick={() => panImage('down')}>↓</button>\r\n            <button onClick={() => panImage('left')}>←</button>\r\n            <button onClick={() => panImage('right')}>→</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageViewer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-modal';\r\nimport './Footer.css';\r\nimport footerLogo from './image/footer.png';\r\nimport linkdenLogo from './image/linkden.jpg';\r\nimport { FaCog, FaFilePdf } from 'react-icons/fa';\r\nimport updateHistoryPDF from './updatecomics.pdf'; // Replace with the actual path to your PDF\r\n\r\n// Import your images for update stories\r\nimport updateImage1 from './image/update3.png'; // Example image for update 1.1.0\r\nimport updateImage2 from './image/update2.png'; // Example image for update 1.0.1\r\nimport updateImage3 from './image/update1.png'; // Example image for update 1.0.0\r\nimport ImageViewer from './ImageViewer'; // Import the new ImageViewer component\r\n\r\n// Required for accessibility, setting the root element for the modal\r\nModal.setAppElement('#root');\r\n\r\nconst Footer = () => {\r\n  const [localTime, setLocalTime] = useState('');\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const [isImageViewerOpen, setIsImageViewerOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const updateTime = () => {\r\n      const options = { timeZone: 'Africa/Tunis', hour: '2-digit', minute: '2-digit', second: '2-digit' };\r\n      const now = new Intl.DateTimeFormat('en-US', options).format(new Date());\r\n      setLocalTime(now);\r\n    };\r\n\r\n    updateTime();\r\n    const intervalId = setInterval(updateTime, 1000);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  const openModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setIsImageViewerOpen(false); // Close image viewer when modal is closed\r\n  };\r\n\r\n  const showImage = (image) => {\r\n    setSelectedImage(image);\r\n    setIsModalOpen(false); // Close modal\r\n    setIsImageViewerOpen(true); // Open image viewer\r\n  };\r\n\r\n  const closeImageViewer = () => {\r\n    setIsImageViewerOpen(false);\r\n    setIsModalOpen(true); // Reopen modal when closing image viewer\r\n  };\r\n\r\n  return (\r\n    <footer className=\"footer-container\">\r\n      <div className=\"social-icons\">\r\n        <img src={linkdenLogo} alt=\"LinkedIn\" className=\"social-icon\" />\r\n      </div>\r\n      <div className=\"footer-logo\">\r\n        <img src={footerLogo} alt=\"Hachani Abdelkodous Logo\" className=\"footer-logo-image\" />\r\n      </div>\r\n\r\n      <div className=\"footer-info\">\r\n        Made with love <span className=\"footer-heart\">❤️</span> in Tunisia, Tunis.\r\n        <br />\r\n        <span className=\"footer-time\">Local time — {localTime}</span>\r\n        <br />\r\n        <button onClick={openModal} className=\"h-footer-update-button\">\r\n          <FaCog className=\"settings-icon\" />\r\n          View Update History\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"footer-buttons\">\r\n        <a href=\"https://www.instagram.com/thedevbender/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"footer-button\">\r\n          Instagram ↗\r\n        </a>\r\n        <a href=\"https://www.linkedin.com/in/abdelkodous-hachani-583a41272/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"footer-button\">\r\n          Linkedin ↗\r\n        </a>\r\n        <a href=\"https://medium.com/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"footer-button\">\r\n          Medium ↗\r\n        </a>\r\n        <a href=\"https://x.com/thedevbender\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"footer-button\">\r\n          X ↗\r\n        </a>\r\n      </div>\r\n\r\n      <div className=\"footer-copyright\">\r\n        © 2024 ABDELKODOUS HACHANI. ALL RIGHTS RESERVED.v1.1.0\r\n      </div>\r\n\r\n      {/* Modal for update history */}\r\n      <Modal\r\n        isOpen={isModalOpen}\r\n        onRequestClose={closeModal}\r\n        contentLabel=\"Update History Modal\"\r\n        className=\"v-modal-content\"\r\n        overlayClassName=\"v-modal-overlay\"\r\n      >\r\n        <h2><FaCog className=\"settings-icon\" />Update History</h2>\r\n        <p>This update log reflects my commitment to improving my website. Whether you're a friend, client, or visitor, your feedback is valuable—feel free to share your thoughts to help me enhance the experience! Every update comes with its own comic,\r\n           so click the button to read the comic and discover what's different between versions.</p>\r\n        \r\n        {/* Table for version history */}\r\n        <table className=\"update-history-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Version</th>\r\n              <th>Date</th>\r\n              <th>Changelog Comics</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>1.1.0</td>\r\n              <td>2024-09</td>\r\n              <td><button onClick={() => showImage(updateImage1)} className=\"story-button\">Read the Comic</button></td>\r\n            </tr>\r\n            <tr>\r\n              <td>1.0.1</td>\r\n              <td>2024-08</td>\r\n              <td><button onClick={() => showImage(updateImage2)} className=\"story-button\">Read the Comic</button></td>\r\n            </tr>\r\n            <tr>\r\n              <td>1.0.0</td>\r\n              <td>2024-07</td>\r\n              <td><button onClick={() => showImage(updateImage3)} className=\"story-button\">Read the Comic</button></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        {/* Download Update History PDF */}\r\n        <a href={updateHistoryPDF} download className=\"download-link\"> \r\n          <FaFilePdf className=\"pdf-icon\" />Download All Comics PDF\r\n        </a>\r\n\r\n        {/* Close button below the download link */}\r\n        <button onClick={closeModal} className=\"v-modal-close-button small-close-button\">Close</button>\r\n      </Modal>\r\n\r\n      {/* Display ImageViewer when an image is selected */}\r\n      {isImageViewerOpen && selectedImage && (\r\n        <ImageViewer imageSrc={selectedImage} onClose={closeImageViewer} />\r\n      )}\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n"],"names":["_ref","imageSrc","onClose","scale","setScale","useState","translateX","setTranslateX","translateY","setTranslateY","imageRef","useRef","useEffect","handleTouchEnd","prevScale","Math","max","window","addEventListener","removeEventListener","panImage","direction","prev","_jsx","className","onClick","children","_jsxs","e","stopPropagation","onTouchStart","touches","length","preventDefault","onTouchMove","distance","sqrt","pow","clientX","clientY","initialDistance","newScale","style","position","src","alt","transform","transition","ref","handleZoomIn","handleZoomOut","Modal","Footer","localTime","setLocalTime","isModalOpen","setIsModalOpen","selectedImage","setSelectedImage","isImageViewerOpen","setIsImageViewerOpen","updateTime","now","Intl","DateTimeFormat","timeZone","hour","minute","second","format","Date","intervalId","setInterval","clearInterval","closeModal","showImage","image","linkdenLogo","footerLogo","openModal","FaCog","href","target","rel","isOpen","onRequestClose","contentLabel","overlayClassName","updateImage1","updateImage2","updateImage3","updateHistoryPDF","download","FaFilePdf","ImageViewer","closeImageViewer"],"sourceRoot":""}