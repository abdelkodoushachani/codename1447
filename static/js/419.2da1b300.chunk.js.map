{"version":3,"file":"static/js/419.2da1b300.chunk.js","mappings":"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","sources":["components/CatchMe.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport './Catchme.css';\r\nimport catchHero from './image/hero.png';\r\nimport linkdenLogo from './image/linkden.jpg';\r\nimport { FaWhatsapp, FaEnvelope, FaMask, FaCheckCircle } from 'react-icons/fa';\r\n\r\nconst CatchMe = () => {\r\n    const [position, setPosition] = useState({ top: '50%', left: '50%' });\r\n    const [hoverText, setHoverText] = useState('CATCH ME');\r\n    const [caught, setCaught] = useState(false);\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [isFlying, setIsFlying] = useState(false);\r\n    const [showFeedbackModal, setShowFeedbackModal] = useState(false);\r\n    const [feedback, setFeedback] = useState('');\r\n    const [feedbackSubmitted, setFeedbackSubmitted] = useState(false);\r\n\r\n    // Debounce function\r\n    const debounce = (func, delay) => {\r\n        let timeout;\r\n        return (...args) => {\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(() => func.apply(this, args), delay);\r\n        };\r\n    };\r\n\r\n    const handleMouseOver = () => {\r\n        if (!caught) setHoverText('GOTCHA!');\r\n    };\r\n\r\n    const handleMouseOut = () => {\r\n        if (!caught) setHoverText('CATCH ME');\r\n    };\r\n\r\n    const handleCatch = () => {\r\n        if (!caught) {\r\n            setCaught(true);\r\n            setHoverText('YOU CAUGHT ME!');\r\n            setModalVisible(true);\r\n            setIsFlying(false);\r\n        }\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setModalVisible(false);\r\n        setCaught(false);\r\n        setHoverText('CATCH ME');\r\n    };\r\n\r\n    const moveCatchBox = useCallback(() => {\r\n        if (!caught) {\r\n            const maxTop = window.innerHeight - 100;\r\n            const maxLeft = window.innerWidth - 200;\r\n            const randomTop = Math.floor(Math.random() * maxTop);\r\n            const randomLeft = Math.floor(Math.random() * maxLeft);\r\n            setPosition({ top: `${randomTop}px`, left: `${randomLeft}px` });\r\n            setIsFlying(true);\r\n        }\r\n    }, [caught]);\r\n\r\n    const handleMouseMove = useCallback(debounce((e) => {\r\n        if (!caught) {\r\n            const catchBox = document.querySelector('.catch-me-container');\r\n            const rect = catchBox.getBoundingClientRect();\r\n            const distance = Math.hypot(e.clientX - rect.left, e.clientY - rect.top);\r\n\r\n            if (distance < 200) {\r\n                moveCatchBox();\r\n            }\r\n        }\r\n    }, 100), [caught, moveCatchBox]);\r\n\r\n    useEffect(() => {\r\n        if (!caught) {\r\n            const intervalId = setInterval(moveCatchBox, 500);\r\n            return () => clearInterval(intervalId);\r\n        }\r\n    }, [caught, moveCatchBox]);\r\n\r\n    const handleEmailClick = () => {\r\n        const email = \"contact@abdelkodoushachani.uk\";\r\n        const subject = \"I Caught You!\";\r\n        const body = \"Hello! I caught you and would love to connect. Please let me know how I can reach you.\";\r\n        window.location.href = `mailto:${email}?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`;\r\n    };\r\n\r\n    const handleWhatsAppClick = () => {\r\n        const phoneNumber = \"+441158883068\"; // Replace with your phone number\r\n        const message = \"Hello! I caught you and would love to connect.\";\r\n        const url = `https://api.whatsapp.com/send?phone=${encodeURIComponent(phoneNumber)}&text=${encodeURIComponent(message)}`;\r\n        window.open(url, \"_blank\");\r\n    };\r\n\r\n    const handleShowFeedbackModal = () => {\r\n        setModalVisible(false); // Close Catch Me Modal\r\n        setShowFeedbackModal(true);\r\n        setFeedbackSubmitted(false);\r\n    };\r\n\r\n    const handleCloseFeedbackModal = () => {\r\n        setShowFeedbackModal(false); // Close feedback modal\r\n        setModalVisible(true); // Show the Catch Me modal again\r\n    };\r\n\r\n    const handleFeedbackSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const formData = new FormData();\r\n        formData.append('entry.255952891', feedback); // Replace with your actual field ID from Google Forms\r\n        \r\n        fetch('https://docs.google.com/forms/d/e/1FAIpQLSdUJhu3l9oYzEYr3Bcn0fk6E3Ccq9ez-bqP3aNPv2ushqnG0w/formResponse', {\r\n            method: 'POST',\r\n            body: formData,\r\n            mode: 'no-cors',\r\n        })\r\n        .then(() => {\r\n            setFeedbackSubmitted(true);\r\n            setFeedback('');\r\n            setTimeout(() => {\r\n                handleCloseFeedbackModal(); // Close the modal after 2 seconds\r\n            }, 2000);\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error submitting feedback:', error);\r\n            alert('There was an error submitting your feedback. Please try again.');\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"catch-section\" onMouseMove={handleMouseMove}>\r\n            <div \r\n                className=\"catch-me-container\" \r\n                style={position}\r\n                onMouseEnter={handleMouseOver} \r\n                onMouseLeave={handleMouseOut}\r\n                onClick={handleCatch}\r\n            >\r\n                <div className=\"catch-box\">\r\n                    <img \r\n                        src={catchHero} \r\n                        alt=\"Catch Me\" \r\n                        className={`su-catch-image ${isFlying ? 'fly' : ''}`}\r\n                        loading=\"lazy\" // Lazy load the image\r\n                    />\r\n                    <div className=\"hover-text\">{hoverText}</div>\r\n                </div>\r\n            </div>\r\n            {modalVisible && (\r\n                <div className=\"su-modal\">\r\n                    <div className=\"su-modal-content su-superman-theme\">\r\n                        <span className=\"vb-close\" onClick={closeModal}>close</span>\r\n                        <img \r\n                           src={linkdenLogo}\r\n                            alt=\"LinkedIn Profile\" \r\n                            className=\"su-profile-pic\"\r\n                        />\r\n                        <h2>Hi there! You caught me!</h2>\r\n                        <p>In the future, it won't be so easy to catch me. Stay tuned for updates!</p>\r\n                        <div className=\"contact-info\">\r\n                            <p>Get in touch:</p>\r\n                            <button onClick={handleWhatsAppClick} className=\"su-contact-button\">\r\n                            <FaWhatsapp className=\"su-icon\" />\r\n                                Contact via WhatsApp\r\n                            </button>\r\n                            <button onClick={handleEmailClick} className=\"su-contact-button\">\r\n                            <FaEnvelope className=\"su-icon\" /> \r\n                            Contact via Email\r\n                            </button>\r\n                        </div>\r\n                        <h3></h3>\r\n                        <p>Your Voice Matters: Share Your Thoughts Anonymously</p>\r\n                        <button onClick={handleShowFeedbackModal} className=\"su-contact-button\">\r\n                        <FaMask className=\"su-icon\" />\r\n                        Anonymous Feedback\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {showFeedbackModal && (\r\n                <div className=\"f-modal-overlay\" onClick={handleCloseFeedbackModal}>\r\n                    <div className=\"f-modal-content\" onClick={(e) => e.stopPropagation()}>\r\n                        <FaMask className=\"su-icon\" size={60}  />\r\n                        <h2>Anonymous Feedback Welcome</h2>\r\n                        <p className=\"feedback-anonymous-text\">\r\n                            Feel free to share your thoughts anonymously about your experience with me, my website, or our communication.\r\n                            Your insights drive innovation and improvement. Thank you!\r\n                        </p>\r\n                        {!feedbackSubmitted ? (\r\n                            <form onSubmit={handleFeedbackSubmit}>\r\n                                <textarea\r\n                                    value={feedback}\r\n                                    onChange={(e) => setFeedback(e.target.value)}\r\n                                    placeholder=\"Type your anonymous feedback here...\"\r\n                                    rows=\"4\"\r\n                                    required\r\n                                ></textarea>\r\n                                <button type=\"submit\" className=\"f-modal-submit-button\">\r\n                                    <FaMask className=\"su-icon\"  />\r\n                                    Submit Feedback\r\n                                </button>\r\n                            </form>\r\n                        ) : (\r\n                            <div className=\"feedback-submitted-message\">\r\n                                  <FaCheckCircle className=\"validation-icon\" size={40} />\r\n                                  Your Feedback Matters \r\n                                  Thank You for Helping Shape My Journey!\r\n                            </div>\r\n                        )}\r\n                        <button className=\"f-modal-close-button\" onClick={handleCloseFeedbackModal}>\r\n                            Close\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CatchMe;\r\n"],"names":["CatchMe","position","setPosition","useState","top","left","hoverText","setHoverText","caught","setCaught","modalVisible","setModalVisible","isFlying","setIsFlying","showFeedbackModal","setShowFeedbackModal","feedback","setFeedback","feedbackSubmitted","setFeedbackSubmitted","moveCatchBox","useCallback","maxTop","window","innerHeight","maxLeft","innerWidth","randomTop","Math","floor","random","randomLeft","handleMouseMove","debounce","func","delay","timeout","_len","arguments","length","args","Array","_key","clearTimeout","setTimeout","apply","e","rect","document","querySelector","getBoundingClientRect","hypot","clientX","clientY","useEffect","intervalId","setInterval","clearInterval","handleCloseFeedbackModal","_jsxs","className","onMouseMove","children","_jsx","style","onMouseEnter","handleMouseOver","onMouseLeave","handleMouseOut","onClick","handleCatch","src","catchHero","alt","loading","closeModal","linkdenLogo","handleWhatsAppClick","url","encodeURIComponent","open","FaWhatsapp","handleEmailClick","location","href","FaEnvelope","handleShowFeedbackModal","FaMask","stopPropagation","size","FaCheckCircle","onSubmit","preventDefault","formData","FormData","append","fetch","method","body","mode","then","catch","error","console","alert","value","onChange","target","placeholder","rows","required","type"],"sourceRoot":""}